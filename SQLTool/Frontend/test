$aValue) { $tmpArray=spliti(' AS ', $aValue); $tmpField = str_replace(' ', '', $tmpArray[0]); if(count($tmpArray) == 2) { $tmpAlias = str_replace(' ', '', $tmpArray[1]); $selectAliases[$tmpField] = $tmpAlias; } unset($selectArray[$aKey]); $selectArray[] = $tmpField; } $fromArray = explode(',', $from); // check for aliases in FROM foreach($fromArray as $aKey=>$aValue) { $tmpArray=explode(' ', trim($aValue)); $tmpTable = str_replace(' ', '', $tmpArray[0]); if(count($tmpArray) == 2) { $tmpAlias = str_replace(' ', '', $tmpArray[1]); $fromAliases[$tmpAlias] = $tmpTable; } unset($fromArray[$aKey]); $fromArray[] = $tmpTable; } $whereArray = explode(' ', $where); // select und from pr�fen // Tabellennamen ermitteln $tables = array(); $fields = array(); $db_sql2 = 'SHOW TABLES'; $db_result = mysqli_query($db_sql2, $db_conn); while($db_data = mysqli_fetch_array($db_result)) { $tables[] = $db_data[0]; } // get possible fields foreach($fromArray as $fromTable) { if(in_array($fromTable, $tables)) { $db_sql2 = 'DESCRIBE ' . $fromTable; $db_result = mysqli_query($db_sql2, $db_conn); while($db_data = mysqli_fetch_array($db_result)) { $fields[$fromTable][]=$db_data['Field']; } } } // check all select fields foreach($selectArray as $selectField) { // check if table is given $tmpArray = explode('.', $selectField); if(count($tmpArray) == 2) { $tmpTable = $tmpArray[0]; $tmpField = $tmpArray[1]; if(isset($fromAliases[$tmpTable])) $tmpTable = $fromAliases[$tmpTable]; if($tmpField != '*' && !in_array($tmpField, $fields[$tmpTable])) $errors[] = 'Feld existiert nicht: ' . $selectField; } else { // check all tables if we find field foreach($fields as $aKey=>$aValue) { if($selectField != '*' && !in_array($selectField, $aValue)) $errors[] = 'Feld existiert nicht: ' . $selectField; } } } // check all from tables foreach($fromArray as $fromTable) { if(!in_array($fromTable, $tables)) $errors[] = 'Tabelle existiert nicht: ' . $fromTable; } // select and from given? if($select == '') $errors[] = 'keine SELECT Felder angegeben'; if($from == '') $errors[] = 'keine FROM Tabellen angegeben'; // let's check where (if given) if($where != '') { $where_stats = count_chars($where, 1); $chars = array('"' => $where_stats[ord('"')] ? $where_stats[ord('"')] : 0, '\'' => $where_stats[ord('\'')] ? $where_stats[ord('\'')] : 0, '(' => $where_stats[ord('(')] ? $where_stats[ord('(')] : 0, ')' => $where_stats[ord(')')] ? $where_stats[ord(')')] : 0); if($chars['"'] % 2 != 0) $errors[] = 'Doppelte Anf�hrungszeichen in WHERE-Bedingung nicht geschlossen'; if($chars['\''] % 2 != 0) $errors[] = 'Einfache Anf�hrungszeichen in WHERE-Bedingung nicht geschlossen'; if($chars['('] != $chars[')']) $errors[] = 'Falsche Klammerung in WHERE-Bedingung'; } } else { $db_sql = $_REQUEST['advancedString']; $accessGranted = false; // advancedCheck first! // Erweiterte Abfrage // Pr�fen, ob Passwort ben�tigt wird und ggf. ob es richtig ist $criticalRequest = array('INSERT' => array('msg'=>'Falsches Passwort: Einf�gen Datenbank nicht m�glich', 'needPass'=>1), 'DELETE' => array('msg'=>'Falsches Passwort: L�schen aus Datenbank nicht m�glich', 'needPass'=>1), 'UPDATE' => array('msg'=>'Falsches Passwort: �ndern der Datenbank nicht m�glich', 'needPass'=>1), 'CREATE' => array('msg'=>'Unerlaubte Datenbankoperation', 'needPass'=>0), 'ALTER' => array('msg'=>'Unerlaubte Datenbankoperation', 'needPass'=>0), 'DROP' => array('msg'=>'Unerlaubte Datenbankoperation', 'needPass'=>0)); // alle badwords durchgehen foreach($criticalRequest as $aKey=>$aValue) { // enth�lt query das badword if(strpos(strtolower($db_sql), strtolower($aKey)) !== false) { // kann badword durch passwort ausgef�hrt werden? if($aValue['needPass'] == 1) { // stimmt passwort? if($_REQUEST['pw'] == ADVANCED_PW) $dbChangeFlag = 1; else $errors[] = $aValue['msg']; } else { $errors[] = $aValue['msg']; } } } // foreach() // no error so far so let's grant access! if(count($errors) == 0) $accessGranted = true; } // execute query and check for error if($accessGranted == true) { @mysqli_query($db_sql, $db_conn); $error_txt = mysqli_error(); if($error_txt != '') { $errors[] = $error_txt; } } ?